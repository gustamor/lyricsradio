Index: app/src/main/java/net/laenredadera/app/android/lyricsradio/ui/PreviouslyPlayedScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package net.laenredadera.app.android.lyricsradio.ui.theme\n\nimport androidx.appcompat.content.res.AppCompatResources\nimport androidx.compose.foundation.Image\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.height\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.width\nimport androidx.compose.foundation.rememberScrollState\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.foundation.verticalScroll\nimport androidx.compose.material3.Icon\nimport androidx.compose.material3.IconButton\nimport androidx.compose.material3.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.draw.clip\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.platform.testTag\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport androidx.hilt.navigation.compose.hiltViewModel\nimport androidx.navigation.NavHostController\nimport com.google.accompanist.drawablepainter.rememberDrawablePainter\nimport net.laenredadera.app.android.lyricsradio.R\nimport net.laenredadera.app.android.lyricsradio.ui.PreviousPlayedSongViewModel\nimport net.laenredadera.app.android.lyricsradio.ui.Space\nimport net.laenredadera.app.android.lyricsradio.ui.TopStationsViewModel\n\n@Composable\nfun PreviouslyPlayedScreen(navigationController: NavHostController) {\n    Column(\n        Modifier\n            .fillMaxSize()\n            .padding(top = 32.dp)\n            .verticalScroll(rememberScrollState())\n            .background(Color(0xFF1C1C1C))\n    ) {\n        PlayedHeader(navigationController)\n        PlayedBody(navigationController)\n    }\n}\n\n@Composable\nfun PlayedHeader(navigationController: NavHostController) {\n    Row(\n        Modifier\n            .fillMaxWidth()\n            .height(80.dp),\n        horizontalArrangement = Arrangement.SpaceBetween\n\n    ) {\n\n        IconButton(onClick = { navigationController.popBackStack() }) {\n            val backArrow = AppCompatResources.getDrawable(\n                LocalContext.current,\n                R.drawable.ic_back_arrow\n            )\n            Icon(\n                painter = rememberDrawablePainter(drawable = backArrow),\n                tint = Color.White,\n                modifier = Modifier\n                    .height(21.dp)\n                    .width(21.dp),\n                contentDescription = \"BackArrowHeaderIcon\"\n            )\n        }\n        Text(\n            text = \"Played\",\n            fontWeight = FontWeight.Bold,\n            fontSize = 21.sp,\n            color = Color.White,\n            modifier = Modifier.testTag(\"PlayedHeaderText\")\n        )\n        IconButton(onClick = { /*TODO*/ }) {\n            val settings = AppCompatResources.getDrawable(\n                LocalContext.current,\n                androidx.media3.ui.R.drawable.exo_ic_settings\n            )\n            Image(\n                painter = rememberDrawablePainter(drawable = settings),\n                contentDescription = \"PlayedHeaderIcon\"\n            )\n        }\n    }\n}\n\n@Composable\nfun PlayedBody(navigationController: NavHostController) {\n    val playedSongViewModel: PreviousPlayedSongViewModel = hiltViewModel()\n\n    var playedSongs = playedSongViewModel.playedSongs\n    Text(\n        text = \"Previously Played\",\n        fontSize = 21.sp,\n        color = Color.White,\n        modifier = Modifier\n            .padding(start = 16.dp)\n            .testTag(\"PlayedBodyText\")\n    )\n    Space(16)\n    PlayedItem()\n    PlayedItem()\n    PlayedItem()\n    PlayedItem()\n    PlayedItem()\n}\n\n@Composable\nfun PlayedItem() {\n\n    Column(\n        modifier = Modifier\n            .height(182.dp)\n            .fillMaxWidth()\n            .padding(bottom = 8.dp)\n    ) {\n        Row(\n            modifier = Modifier\n                .fillMaxWidth()\n                .weight(8f)\n        ) {\n\n            Image(\n                painter = painterResource(id = R.drawable.blur),\n                contentDescription = \"coverOfTheAlbum\",\n                modifier = Modifier\n                    .padding(horizontal = 32.dp, vertical = 16.dp)\n                    .height(96.dp)\n                    .width(96.dp)\n                    .clip(\n                        RoundedCornerShape(16.dp)\n                    )\n            )\n            Column(Modifier.fillMaxSize(), verticalArrangement = Arrangement.Center) {\n                Text(\n                    text = \"Header Header\",\n                    fontSize = 20.sp,\n                    fontWeight = FontWeight.Bold,\n                    color = Color.White,\n                    modifier = Modifier.testTag(\"ListenedItemHeaderText\")\n                )\n                Text(\n                    text = \"Sub header\",\n                    fontSize = 16.sp,\n                    color = Color.White,\n                    modifier = Modifier.testTag(\"ListenedItemBodyText\")\n                )\n                Space(12)\n                Text(\n                    text = \"18 Ago 23\",\n                    fontSize = 14.sp,\n                    color = Color.White,\n                    modifier = Modifier.testTag(\"ListenedItemBodyText\")\n                )\n            }\n        }\n        Row(\n            Modifier\n                .weight(2f)\n                .padding(start = 32.dp)\n        ) {\n            Text(\n                text = \"Listened at Radio Metal Station\",\n                fontSize = 13.sp,\n                color = Color.White,\n                modifier = Modifier.testTag(\"RadioStationListenedAttext\")\n            )\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/net/laenredadera/app/android/lyricsradio/ui/PreviouslyPlayedScreen.kt b/app/src/main/java/net/laenredadera/app/android/lyricsradio/ui/PreviouslyPlayedScreen.kt
--- a/app/src/main/java/net/laenredadera/app/android/lyricsradio/ui/PreviouslyPlayedScreen.kt	(revision ec5c3316b099753cc1f880a40a034f0d0899c680)
+++ b/app/src/main/java/net/laenredadera/app/android/lyricsradio/ui/PreviouslyPlayedScreen.kt	(date 1690234451923)
@@ -96,8 +96,8 @@
 @Composable
 fun PlayedBody(navigationController: NavHostController) {
     val playedSongViewModel: PreviousPlayedSongViewModel = hiltViewModel()
-
     var playedSongs = playedSongViewModel.playedSongs
+
     Text(
         text = "Previously Played",
         fontSize = 21.sp,
